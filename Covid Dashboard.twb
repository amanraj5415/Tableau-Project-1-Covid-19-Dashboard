<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Covid Cases' inline='true' name='federated.0cu2dd21i7a84j10unpby1leal2i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Cases' name='textscan.0e8sv4a134xeqc19mzm520pq1od5'>
            <connection class='textscan' directory='C:/Users/lenovo/Desktop/Tableau Files' filename='Covid Cases.Csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0e8sv4a134xeqc19mzm520pq1od5' name='Covid Cases.Csv' table='[Covid Cases#Csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State/UnionTerritory' ordinal='1' />
            <column datatype='integer' name='Cured' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Confirmed' ordinal='4' />
            <column datatype='integer' name='Active Cases' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='integer' name='Month' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0e8sv4a134xeqc19mzm520pq1od5' name='Covid Cases.Csv' table='[Covid Cases#Csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State/UnionTerritory' ordinal='1' />
            <column datatype='integer' name='Cured' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Confirmed' ordinal='4' />
            <column datatype='integer' name='Active Cases' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='integer' name='Month' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Covid Cases.Csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid Cases.Csv' datatype='table' name='[__tableau_internal_object_id__].[Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82]' role='measure' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[diff:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Month:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State/UnionTerritory)' hidden='true' name='[Action (State/UnionTerritory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State/UnionTerritory]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[diff:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Year:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[pcto:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Cured:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maharashtra***&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karanataka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dadra and Nagar Haveli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bihar****&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cases being reassigned to states&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madhya Pradesh***&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Himanchal Pradesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unassigned&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid Cases.Csv' id='Covid Cases.Csv_52FC6B3B26D64673B9216360A88F3B82'>
            <properties context=''>
              <relation connection='textscan.0e8sv4a134xeqc19mzm520pq1od5' name='Covid Cases.Csv' table='[Covid Cases#Csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='1' />
                  <column datatype='integer' name='Cured' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Confirmed' ordinal='4' />
                  <column datatype='integer' name='Active Cases' ordinal='5' />
                  <column datatype='integer' name='Year' ordinal='6' />
                  <column datatype='integer' name='Month' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Covid Vaccine' inline='true' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Vaccine' name='textscan.063iz9w1jjv2w218jxbc81dmtzv2'>
            <connection class='textscan' directory='C:/Users/lenovo/Desktop/Tableau Files' filename='Covid Vaccine.Csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.063iz9w1jjv2w218jxbc81dmtzv2' name='Covid Vaccine.Csv' table='[Covid Vaccine#Csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Total Doses Administered' ordinal='2' />
            <column datatype='real' name='Sessions' ordinal='3' />
            <column datatype='real' name='First Dose Administered' ordinal='4' />
            <column datatype='real' name='Second Dose Administered' ordinal='5' />
            <column datatype='real' name='Male (Doses Administered)' ordinal='6' />
            <column datatype='real' name='Female (Doses Administered)' ordinal='7' />
            <column datatype='real' name='Transgender (Doses Administered)' ordinal='8' />
            <column datatype='real' name='Covaxin (Doses Administered)' ordinal='9' />
            <column datatype='real' name='CoviShield (Doses Administered)' ordinal='10' />
            <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='11' />
            <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='12' />
            <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='13' />
            <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='14' />
            <column datatype='integer' name='Year' ordinal='15' />
            <column datatype='integer' name='Month' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.063iz9w1jjv2w218jxbc81dmtzv2' name='Covid Vaccine.Csv' table='[Covid Vaccine#Csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Total Doses Administered' ordinal='2' />
            <column datatype='real' name='Sessions' ordinal='3' />
            <column datatype='real' name='First Dose Administered' ordinal='4' />
            <column datatype='real' name='Second Dose Administered' ordinal='5' />
            <column datatype='real' name='Male (Doses Administered)' ordinal='6' />
            <column datatype='real' name='Female (Doses Administered)' ordinal='7' />
            <column datatype='real' name='Transgender (Doses Administered)' ordinal='8' />
            <column datatype='real' name='Covaxin (Doses Administered)' ordinal='9' />
            <column datatype='real' name='CoviShield (Doses Administered)' ordinal='10' />
            <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='11' />
            <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='12' />
            <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='13' />
            <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='14' />
            <column datatype='integer' name='Year' ordinal='15' />
            <column datatype='integer' name='Month' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Doses Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Doses Administered]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Total Doses Administered</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sessions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sessions]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Sessions</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[First Dose Administered]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>First Dose Administered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Second Dose Administered]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Second Dose Administered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male (Doses Administered)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Male (Doses Administered)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female (Doses Administered)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Female (Doses Administered)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender (Doses Administered)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Transgender (Doses Administered)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covaxin (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covaxin (Doses Administered)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Covaxin (Doses Administered)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CoviShield (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CoviShield (Doses Administered)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>CoviShield (Doses Administered)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sputnik V (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sputnik V (Doses Administered)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Sputnik V (Doses Administered)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>18-44 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>45-60 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years(Individuals Vaccinated)]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>60+ Years(Individuals Vaccinated)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Covid Vaccine.Csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='18-44 Years' datatype='real' name='[18-44 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column caption='45-60 Years' datatype='real' name='[45-60 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column caption='60+ Years' datatype='real' name='[60+ Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:18-44 Years(Individuals Vaccinated):qk]&quot;' value='18-44 Years' />
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:45-60 Years(Individuals Vaccinated):qk]&quot;' value='45-60 Years' />
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:60+ Years(Individuals Vaccinated):qk]&quot;' value='60+ Years' />
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Covaxin (Doses Administered):qk]&quot;' value='Covaxin ' />
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:CoviShield (Doses Administered):qk]&quot;' value='CoviShield ' />
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:First Dose Administered:qk]&quot;' value='First Dose' />
          <alias key='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Second Dose Administered:qk]&quot;' value='Second Dose' />
        </aliases>
      </column>
      <column caption='Covaxin Doses' datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
      <column caption='CoviShield Doses' datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='Female Doses' datatype='real' name='[Female (Doses Administered)]' role='measure' type='quantitative' />
      <column caption='First Dose ' datatype='real' name='[First Dose Administered]' role='measure' type='quantitative' />
      <column caption='Male Doses' datatype='real' name='[Male (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Second Dose' datatype='real' name='[Second Dose Administered]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sessions]' role='measure' type='quantitative' />
      <column caption='Sputnik V Doses ' datatype='real' name='[Sputnik V (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Doses' datatype='real' name='[Total Doses Administered]' role='measure' type='quantitative' />
      <column datatype='real' name='[Transgender (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid Vaccine.Csv' datatype='table' name='[__tableau_internal_object_id__].[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Doses Administered]' derivation='Max' name='[max:Total Doses Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[18-44 Years(Individuals Vaccinated)]' derivation='Sum' name='[pcto:sum:18-44 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[45-60 Years(Individuals Vaccinated)]' derivation='Sum' name='[pcto:sum:45-60 Years(Individuals Vaccinated):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[45-60 Years(Individuals Vaccinated)]' derivation='Sum' name='[pcto:sum:45-60 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[60+ Years(Individuals Vaccinated)]' derivation='Sum' name='[pcto:sum:60+ Years(Individuals Vaccinated):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[60+ Years(Individuals Vaccinated)]' derivation='Sum' name='[pcto:sum:60+ Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[First Dose Administered]' derivation='Sum' name='[pcto:sum:First Dose Administered:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Second Dose Administered]' derivation='Sum' name='[pcto:sum:Second Dose Administered:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Total Doses Administered]' derivation='Sum' name='[pcto:sum:Total Doses Administered:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[18-44 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:18-44 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[45-60 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:45-60 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[60+ Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:60+ Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Female (Doses Administered)]' derivation='Sum' name='[sum:Female (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[First Dose Administered]' derivation='Sum' name='[sum:First Dose Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male (Doses Administered)]' derivation='Sum' name='[sum:Male (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Second Dose Administered]' derivation='Sum' name='[sum:Second Dose Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sessions]' derivation='Sum' name='[sum:Sessions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sputnik V (Doses Administered)]' derivation='Sum' name='[sum:Sputnik V (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Doses Administered]' derivation='Sum' name='[sum:Total Doses Administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transgender (Doses Administered)]' derivation='Sum' name='[sum:Transgender (Doses Administered):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Month:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:18-44 Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:18-44 Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Covaxin (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:First Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:First Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Transgender (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:CoviShield (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:45-60 Years(Individuals Vaccinated):qk:2]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:45-60 Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:45-60 Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Sessions:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Male (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:Second Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Second Dose Administered:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Sputnik V (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[max:Total Doses Administered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:Total Doses Administered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Total Doses Administered:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:60+ Years(Individuals Vaccinated):qk:2]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:60+ Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:60+ Years(Individuals Vaccinated):qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Female (Doses Administered):qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[__tableau_internal_object_id__].[cnt:Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[18-44 Years(Individuals Vaccinated)]' palette='orange_10_0' type='interpolated' />
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid Vaccine.Csv' id='Covid Vaccine.Csv_93B53E5BBF8247289B8B40F1932303DA'>
            <properties context=''>
              <relation connection='textscan.063iz9w1jjv2w218jxbc81dmtzv2' name='Covid Vaccine.Csv' table='[Covid Vaccine#Csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='Total Doses Administered' ordinal='2' />
                  <column datatype='real' name='Sessions' ordinal='3' />
                  <column datatype='real' name='First Dose Administered' ordinal='4' />
                  <column datatype='real' name='Second Dose Administered' ordinal='5' />
                  <column datatype='real' name='Male (Doses Administered)' ordinal='6' />
                  <column datatype='real' name='Female (Doses Administered)' ordinal='7' />
                  <column datatype='real' name='Transgender (Doses Administered)' ordinal='8' />
                  <column datatype='real' name='Covaxin (Doses Administered)' ordinal='9' />
                  <column datatype='real' name='CoviShield (Doses Administered)' ordinal='10' />
                  <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='11' />
                  <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='12' />
                  <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='13' />
                  <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='14' />
                  <column datatype='integer' name='Year' ordinal='15' />
                  <column datatype='integer' name='Month' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='Month-wise ac death &amp; confirmed' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_902AB7B535D6467E843E1987038FDC1B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='state-wise active cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_BEF67A1166C14970B0244AFB63B36B34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='Death vs Year-wise' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_8A92522C05374FA78D513440877ED3C9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='State-wise cured confirmed &amp; deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_53594C1516BC4561B2E4E743D7369502]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='top 10 state with ac' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_C52715300EDB49778C9FDB16AC1E949B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='% of deaths state-wise' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_3A27AAA35D304274A67072B3CADB9551]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='Total doses vs State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_40D1A539D3344AA5A90A2A9A42EED648]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='Person Year-wise vaccination' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_5F492E873D4E4321821AC7C318F575CB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='top 10 state with total doses' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_29E25EF5AECA416AA969507C0ACE985D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='Covaxin vs Covishield ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_45B12AFF22F24A56938F27AF05D107B0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='Male &amp; Female doses vs State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_D9ACE5BC43DE4660A2B2F82E544BA47D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' worksheet='% of vacctioation done in each state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% of deaths state-wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Cases' name='federated.0cu2dd21i7a84j10unpby1leal2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu2dd21i7a84j10unpby1leal2i'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action1_8A92522C05374FA78D513440877ED3C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.0cu2dd21i7a84j10unpby1leal2i].[pcto:sum:Deaths:qk:1]' />
              <size column='[federated.0cu2dd21i7a84j10unpby1leal2i].[pcto:sum:Deaths:qk:1]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[pcto:sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0DFCDF8E-5F9A-44D4-AE12-7B7FD9E645A7}' />
    </worksheet>
    <worksheet name='% of vacctioation done in each state'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Vaccine' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' />
          </datasources>
          <datasource-dependencies datasource='federated.0x23xvs1ixkxkw11umasg0cpylfy'>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Doses' datatype='real' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Doses Administered]' derivation='Sum' name='[pcto:sum:Total Doses Administered:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;India&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' />
              <wedge-size column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:Total Doses Administered:qk:1]' />
              <size column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[pcto:sum:Total Doses Administered:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1A7B1D7E-709D-4828-A527-0287CE0DE8D7}' />
    </worksheet>
    <worksheet name='Covaxin vs Covishield '>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Vaccine' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' />
          </datasources>
          <datasource-dependencies datasource='federated.0x23xvs1ixkxkw11umasg0cpylfy'>
            <column caption='Covaxin Doses' datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
            <column caption='CoviShield Doses' datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Covaxin (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:CoviShield (Doses Administered):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action7_C851DEE759B644879B67E556EE322232]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action12_E4A049589C6B4550878E13ED8BD15BE3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_3D93399AD0BF4FC0AADB231E58F14F59]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[:Measure Names]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Multiple Values]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ff0000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Multiple Values]</rows>
        <cols>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EA04D691-AA0F-4923-A6A8-A0953DA6A59F}' />
    </worksheet>
    <worksheet name='Death vs Year-wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Cases' name='federated.0cu2dd21i7a84j10unpby1leal2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu2dd21i7a84j10unpby1leal2i'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action1_AF5C8C388959455084344AE9B18F381B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='284' />
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Year:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Year:qk]' />
              <size column='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#ff00ff' />
                <format attr='mark-transparency' value='216' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F4713C68-01F3-49A1-A4B4-1BF1AF77E4A4}' />
    </worksheet>
    <worksheet name='Male &amp; Female doses vs State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Vaccine' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' />
          </datasources>
          <datasource-dependencies datasource='federated.0x23xvs1ixkxkw11umasg0cpylfy'>
            <column caption='Female Doses' datatype='real' name='[Female (Doses Administered)]' role='measure' type='quantitative' />
            <column caption='Male Doses' datatype='real' name='[Male (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Female (Doses Administered)]' derivation='Sum' name='[sum:Female (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Male (Doses Administered)]' derivation='Sum' name='[sum:Male (Doses Administered):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_D9ACE5BC43DE4660A2B2F82E544BA47D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Female (Doses Administered):qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Male (Doses Administered):qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' />
              <wedge-size column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Female (Doses Administered):qk]' />
              <size column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Male (Doses Administered):qk]' />
              <text column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Female (Doses Administered):qk]' />
              <text column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Male (Doses Administered):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BCB0F933-4DD2-4825-A68C-BAF296F2D506}' />
    </worksheet>
    <worksheet name='Month-wise ac death &amp; confirmed'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Cases' name='federated.0cu2dd21i7a84j10unpby1leal2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu2dd21i7a84j10unpby1leal2i'>
            <column datatype='integer' name='[Active Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action2_DFE7E8D8F92D45F09EE811C40225A798]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_3D93399AD0BF4FC0AADB231E58F14F59]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Confirmed:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#ff007f' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' scope='rows' value='auto' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-color' scope='rows' value='#ff00ff' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff00ff' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='612' />
                <format attr='maxwidth' value='612' />
                <format attr='minheight' value='146' />
                <format attr='maxheight' value='146' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff00ff' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff00ff' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ff00ff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk] + ([federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Confirmed:qk] + [federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]))</rows>
        <cols>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Month:qk]</cols>
      </table>
      <simple-id uuid='{0BAFDCDB-4435-4DBD-92A9-D8DCBD83E0D3}' />
    </worksheet>
    <worksheet name='Person Year-wise vaccination'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Vaccine' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' />
          </datasources>
          <datasource-dependencies datasource='federated.0x23xvs1ixkxkw11umasg0cpylfy'>
            <column caption='18-44 Years' datatype='real' name='[18-44 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
            <column caption='45-60 Years' datatype='real' name='[45-60 Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
            <column caption='60+ Years' datatype='real' name='[60+ Years(Individuals Vaccinated)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[18-44 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:18-44 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
            <column-instance column='[45-60 Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:45-60 Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
            <column-instance column='[60+ Years(Individuals Vaccinated)]' derivation='Sum' name='[sum:60+ Years(Individuals Vaccinated):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:18-44 Years(Individuals Vaccinated):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:45-60 Years(Individuals Vaccinated):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:60+ Years(Individuals Vaccinated):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action7_C851DEE759B644879B67E556EE322232]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action12_E4A049589C6B4550878E13ED8BD15BE3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_3D93399AD0BF4FC0AADB231E58F14F59]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[:Measure Names]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:60+ Years(Individuals Vaccinated):qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:45-60 Years(Individuals Vaccinated):qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:18-44 Years(Individuals Vaccinated):qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='vertical-align' value='center' />
            <format attr='wrap' value='off' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#55aaff' />
            <format attr='background-color' scope='cols' value='#ff00ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#ff0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Multiple Values]</rows>
        <cols>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{60C9E419-2AB4-489A-947E-3845B02E89E3}' />
    </worksheet>
    <worksheet name='State-wise cured confirmed &amp; deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>
State wise cured death confirm cases
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Cases' name='federated.0cu2dd21i7a84j10unpby1leal2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu2dd21i7a84j10unpby1leal2i'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action1_AF5C8C388959455084344AE9B18F381B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='622' />
            <format attr='height' value='423' />
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Confirmed:qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Cured:qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Cured:qk]' />
              <color column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Confirmed:qk]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Cured:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9B55EC11-F961-47C9-82D8-0752C81B9CCC}' />
    </worksheet>
    <worksheet name='Total doses vs State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Vaccine' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' />
          </datasources>
          <datasource-dependencies datasource='federated.0x23xvs1ixkxkw11umasg0cpylfy'>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Doses' datatype='real' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Doses Administered]' derivation='Sum' name='[sum:Total Doses Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_D9ACE5BC43DE4660A2B2F82E544BA47D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='237' />
            <format attr='width' value='208' />
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Total Doses Administered:qk]' value='n#,##0,,,.0B;-#,##0,,,.0B' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' />
              <wedge-size column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Total Doses Administered:qk]' />
              <size column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Total Doses Administered:qk]' />
              <text column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:Total Doses Administered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2D33F146-84F6-49EB-813D-B7DC57E78CDB}' />
    </worksheet>
    <worksheet name='state-wise active cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Cases' name='federated.0cu2dd21i7a84j10unpby1leal2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu2dd21i7a84j10unpby1leal2i'>
            <column datatype='integer' name='[Active Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action1_8A92522C05374FA78D513440877ED3C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='367' />
            <format attr='text-format' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk]' />
              <color column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' />
              <text column='[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Active Cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{367B0AAE-0939-48F9-933E-4B813632FBFC}' />
    </worksheet>
    <worksheet name='top 10 state with ac'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Cases' name='federated.0cu2dd21i7a84j10unpby1leal2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu2dd21i7a84j10unpby1leal2i'>
            <column datatype='integer' name='[Active Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Active Cases]' derivation='Max' name='[max:Active Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action10_79A06309007D4FABBA8C0170FF9B7DF5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]'>
            <groupfilter function='level-members' level='[State/UnionTerritory]' user:ui-action-filter='[Action1_8A92522C05374FA78D513440877ED3C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_BEF67A1166C14970B0244AFB63B36B34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0cu2dd21i7a84j10unpby1leal2i].[max:Active Cases:qk]' included-values='in-range'>
            <min>211554</min>
            <max>701614</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cu2dd21i7a84j10unpby1leal2i].[max:Active Cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[max:Active Cases:qk]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (State/UnionTerritory)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Year)]</column>
            <column>[federated.0cu2dd21i7a84j10unpby1leal2i].[Action (Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cu2dd21i7a84j10unpby1leal2i].[max:Active Cases:qk]</rows>
        <cols>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{C7CD9216-1E25-4482-85FC-DE45422C8A13}' />
    </worksheet>
    <worksheet name='top 10 state with total doses'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Vaccine' name='federated.0x23xvs1ixkxkw11umasg0cpylfy' />
          </datasources>
          <datasource-dependencies datasource='federated.0x23xvs1ixkxkw11umasg0cpylfy'>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Doses' datatype='real' name='[Total Doses Administered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Total Doses Administered]' derivation='Max' name='[max:Total Doses Administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]'>
            <groupfilter function='level-members' level='[none:Month:ok]' user:ui-action-filter='[Action7_C851DEE759B644879B67E556EE322232]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action12_E4A049589C6B4550878E13ED8BD15BE3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action12_3D93399AD0BF4FC0AADB231E58F14F59]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[max:Total Doses Administered:qk]' included-values='in-range'>
            <min>23842895.0</min>
            <max>54447724.0</max>
          </filter>
          <filter class='categorical' column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[max:Total Doses Administered:qk]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Month)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (Year)]</column>
            <column>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[max:Total Doses Administered:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='80' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[max:Total Doses Administered:qk]</rows>
        <cols>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{EF853459-3B79-46D4-A102-36E3CBD10B80}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid-19 Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Covid-19 Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ff007fb4' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#aaffffce' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='20' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
            <zone h='4375' id='21' type-v2='title' w='98666' x='667' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93625' id='18' param='vert' type-v2='layout-flow' w='98666' x='667' y='5375'>
              <zone h='93625' id='16' type-v2='layout-basic' w='98666' x='667' y='5375'>
                <zone h='27000' id='3' name='state-wise active cases' w='31250' x='667' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38875' id='5' name='State-wise cured confirmed &amp; deaths' w='48249' x='667' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41875' id='6' name='top 10 state with ac' w='26084' x='48916' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20875' id='7' name='% of deaths state-wise' w='24333' x='75000' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24750' id='8' name='Covaxin vs Covishield ' w='24668' x='74665' y='47250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27750' id='9' name='Total doses vs State' w='24667' x='667' y='44250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27750' id='10' name='Person Year-wise vaccination' w='23582' x='25334' y='44250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24750' id='11' name='top 10 state with total doses' w='25749' x='48916' y='47250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27000' id='12' name='Male &amp; Female doses vs State' w='24666' x='74667' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27000' id='13' name='Month-wise ac death &amp; confirmed' w='21375' x='31917' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27000' id='14' name='% of vacctioation done in each state' w='21375' x='53292' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21000' id='22' name='Death vs Year-wise' w='24333' x='75000' y='26250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' italic='true'>Covid-19 Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2700' minheight='2700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone h='4375' id='21' type-v2='title' w='98666' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38875' id='5' is-fixed='true' name='State-wise cured confirmed &amp; deaths' w='48249' x='667' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41875' id='6' is-fixed='true' name='top 10 state with ac' w='26084' x='48916' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='159' h='20875' id='7' is-fixed='true' name='% of deaths state-wise' w='24333' x='75000' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='21000' id='22' is-fixed='true' name='Death vs Year-wise' w='24333' x='75000' y='26250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='214' h='27750' id='9' is-fixed='true' name='Total doses vs State' w='24667' x='667' y='44250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='214' h='27750' id='10' is-fixed='true' name='Person Year-wise vaccination' w='23582' x='25334' y='44250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='190' h='24750' id='11' is-fixed='true' name='top 10 state with total doses' w='25749' x='48916' y='47250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='190' h='24750' id='8' is-fixed='true' name='Covaxin vs Covishield ' w='24668' x='74665' y='47250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='27000' id='3' is-fixed='true' name='state-wise active cases' w='31250' x='667' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='27000' id='13' is-fixed='true' name='Month-wise ac death &amp; confirmed' w='21375' x='31917' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='27000' id='14' is-fixed='true' name='% of vacctioation done in each state' w='21375' x='53292' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='27000' id='12' is-fixed='true' name='Male &amp; Female doses vs State' w='24666' x='74667' y='72000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8927456E-BEA1-4B87-82BE-D986F04C6942}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='state-wise active cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4EEB76FF-CF88-4C46-9ECC-1FAEC90B39F3}' />
    </window>
    <window class='worksheet' name='State-wise cured confirmed &amp; deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9C11D69C-D97D-49B6-BA1C-93F79C0BBF04}' />
    </window>
    <window class='worksheet' name='top 10 state with ac'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B7D57AF5-4693-42E2-9E6E-7EC625744998}' />
    </window>
    <window class='worksheet' name='% of deaths state-wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{13C513CA-97EC-4F96-9ECF-E23B939A661D}' />
    </window>
    <window class='worksheet' name='Covaxin vs Covishield '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7BBA5557-5BEA-4CFA-88BE-5B847AF4A077}' />
    </window>
    <window class='worksheet' name='Person Year-wise vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[sum:60+ Years(Individuals Vaccinated):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5795826D-BA84-4A8D-BA05-70B0A114EEDF}' />
    </window>
    <window class='worksheet' name='Total doses vs State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DFEF7E70-CAF8-439A-B211-F0E1C062683C}' />
    </window>
    <window class='worksheet' name='Male &amp; Female doses vs State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5154A0A1-B254-44A9-9812-2A95F808394D}' />
    </window>
    <window class='worksheet' name='top 10 state with total doses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B546BB6B-5687-4D97-8122-2C1900DFC026}' />
    </window>
    <window class='worksheet' name='Month-wise ac death &amp; confirmed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Month:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1EC8A645-146B-47C3-A933-C6E2719843D6}' />
    </window>
    <window class='worksheet' name='Death vs Year-wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[none:Year:qk]</field>
            <field>[federated.0cu2dd21i7a84j10unpby1leal2i].[sum:Deaths:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{13E4D90B-C99C-4FE5-A2BF-865B44F1AD2C}' />
    </window>
    <window class='worksheet' name='% of vacctioation done in each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x23xvs1ixkxkw11umasg0cpylfy].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D775F4AF-DA3C-4FE8-B983-167BA81B3675}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid-19 Dashboard'>
      <viewpoints>
        <viewpoint name='% of deaths state-wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='% of vacctioation done in each state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Covaxin vs Covishield '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death vs Year-wise' />
        <viewpoint name='Male &amp; Female doses vs State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Month-wise ac death &amp; confirmed'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Person Year-wise vaccination'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State-wise cured confirmed &amp; deaths' />
        <viewpoint name='Total doses vs State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='state-wise active cases' />
        <viewpoint name='top 10 state with ac'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 10 state with total doses'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='22' />
      <simple-id uuid='{CE991428-1591-4D89-A457-0FDF9A923303}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% of deaths state-wise' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWT0lEQVR4nO3dWWxc933o8e85Z/YZbkNS1MJFmxWKijZLcutEm22liQPnGkHaXhhOC7hF
      enHbixYpbhGgT74vfbjoQ9uXCzhFDeQmN8hW23FsyY4FeZE3LRSpjRJFURJJiYtIzr6c9X8f
      qDDWSpr2cCSf3+dJJGf+8xcw3znLnEVTSimE8KkAQAaYrPJEhKiGAMy8+burPBEhqiHwyR/0
      c+cgEqnWXIRYdDcFQCSCt3JldWYiRBXo1Z6AENUkAQhfkwCEr0kAwtckAOFrEoDwNQlA+JoE
      IHxNAhC+JgEIX5MAhK9JAMLXJADhaxKA8DUJQPiaBCB8TQIQviYBCF+TAISvSQDC1yQA4WsS
      gPA1CUD4mgQgfE0CEL4mAQhfkwCEr0kAwtckAOFrEoDwNQlA+JoEIHxNAhC+JgEIX5MAhK9J
      AMLXJADhaxKA8DUJQPiaBCB8TQIQvhaY+yFC3N9cx+EnP/gBW77xDTbu28epgwe5dPw4ax55
      hPqWFnrffJPa5maKmQxN7e2s372bWG0tIEsA8QVQzucJx+NkJiYA2PjEE6zfswfPceh77z3Q
      NBLJJJ7rMjYwQHp0dPa5EoD4Qtj65JNc7evDLBYZPH6c8YsXWbp2LcVMhqHeXjbu20eioQHd
      MDixf//s82QVSDzwYrW1eK7L43/5lxRSKYLhMPH6epRSPPX3f8/01avous6Gxx7DNk08x5l9
      rqaUUheBbkC/fBlv5cpq/T+EWFRKebIEEP7hOkWs4jC2OYVjTuNYUxKA+GJSSuG5JezSKOX8
      IOXCZezyBMqzADX7OAlAVIXrOPQcOED90qWs2b6dUi7H2XfeoXPnTvo//JCaxkbCsRhGKEQo
      EqF+2TICweCc4zpOmemJ8+RTJwnrE7h25p6Pl71Aoiqy168zePw4yRUrADj68st4jsPw6dNc
      PHqUhmXLOP/BBxx75RXOHT6Mrt/jraoU5MfpP/Ur3nr5f/DBwf/F+dO/wSpPzzkPCUBURbSm
      hvW7dvHWCy8AcH1oiPTYGKlr1+jas4e3fvhDNj7xBHVLljA+OMixV1+94zg1hetsvfAaj3f/
      OxMnf0apOIlSHqZpUiqV55yHBCCqopTLMdjdTVN7O9f6++navZv02BiRmhoGjx+nqb2dxvZ2
      IokEjW1tmIXCTc9PFCd5+Nyv+dqx/8Paq0dodE32xBtm/66AVObeqz8gu0HFA8ZwLTrGeum6
      /DZRK3fT31KuzfdHz2GpmY3cUDDIl7s60TTtruPJRrB4MCiPxswwWwb205C7xp3e0g1GkK/G
      GjhUmFn3t2ybfKFATSJx12ElAFExnuty6D/+A03T2Pvcc6THx3n3Rz/iS1/9KqP9/Xiex7K1
      axnp62PVww+TXLGCpra228bRlMf6y+/QeeVdDOXe8zUfjyd5r5DCubGrc3Jq+p4ByDaAqJhi
      NovrOJjFIoV0mqFTp1i/ezc9Bw5glUo4pkluaopyPk//hx+iPA+l1E1jxEvT7Or9EV2XD835
      5gdYGYrSGY7P/pzPF7A/cejDrSQAUTFGIDBz7I3nEQgGCYbDFFIpojU1s7/fuG8fa7ZvxyqV
      +OgXv8AqFmeerBQt0wPsOfEiLanBO67y3PE1NY19icbZny3bpnDLBvQnySqQqJhIIsG6P/xD
      lFKkx8dZu2MHJ/bvZ+9zzzE5NIRjWURra2lYvpxdzz7L6IULhKJRUIpVo91suvgGIWfuXZm3
      2h6tpTUQZsQxAZhOpamvq7vjY2UvkLi/KMXqa8fYMrAfw7v7qstc9ueu83/TM8f9G4bOpg1d
      d/wyTVaBxH3DdT1SZ4dpH/j4M735AR6N1ZM0grPjZrLZOz5OAhD3B6UY+PA8b/78CD+e2saU
      3vSZhqs3gjwaq5/9OZ3J3raBDRKAuA8oz6Pu0nn2TPSyJGTzbvcQL07uYFJv/kzj7osnMW78
      O5vL49xhb5AEIKpKKYVzrpepn/87MSfLd9fD8pjHBz0j/HR6Gyk9ueCxlwRCbIvObPw6jkO+
      ULztMRKAqCpvdJjyz35IKTXFmZPH0IqTPNcFbXGHQ90j/Dj1CFmtdkFja5rG1xONBG7sRJ1O
      pW97jAQgqsYr5Cj/8kUolwBwbJv+sycppUf5bqdiVY3LOyeu8f/SO8hrd/82914eCsdZFYoC
      kMvnblsNkgBEVSjHwdr/C7yrl2/6ves6XOg7RXb8Cn/e6bG+zubN4+P8JLWDwgIiCGgaTySS
      N8b2yGRvPoBOAhAL4rku5Xwez/MAcCwLq1RCKTXze9fFLBbxXBfHtm/aA6OUwjl1FPvY+3cd
      f+jSBUaHBvjOGo9NSZff9kzxk9QOilrsU8/1kWgdTTd2iWayN+8NMp5//vnnU8AooKXTqPr6
      O48ixCd0v/Ya7/34x+iGQVN7O6//y79w5u23MYtFTv72tyjPY/+//RuubTN86hRtGzbMHpas
      0lOUf/oClG/fKP2kXDaNVS7ylbWN5Cw4PFiiUL+OzugkIax5zzWg6ZjK44xZwHFckskGDGNm
      /5AsAcSCGcEgRiCAY1kEw2Ga2trofeMNbNPEKpVYvW0bo/39lLLZ2au2Kc/DOvgqKjP36YoA
      U9fHGOjr5RutJjuXurzVO8Uvs9spadFPNdedsQZqdQPHccjl8rO/lwDEghTSaZo6OkiPjZGf
      nsaxLNJjYzz0B39AtKaG7PXrfPnxx2nu6GD0wgWu9vUB4F4ZwD7xwad6rXRqigtnTrC3pcju
      pTavn5jmpfwjWMx9kvzvNAVC7LixSzSV/v3eIDkWSCyIbZpkxsepa2nBtW0818U2TRKNjaSu
      XqWupWXmZHVNIz81RaKxkYCuUXzhf+MNXVzQa4YjEdZ2bqY3V8fb4yH+y5Ya/jjxIQHmPkwa
      4Jpt8g9j59F0na7OdYRDIVkCiIUJhsM0tbcTDIeJJBLE6uqoW7IE48Y2QTAcJhiJEAyHaVi+
      nGA4jHO2B2/40oJf0yyXOX/mBBtjkzy5wuLXJ7K8UtiOPc+DmlsCITZFavA8j0xm5tggCUAs
      CuU6WO+8Dsr7TOM4tsX5Mz10aKN8u8PipRNlXs5vw5k96OHuDE3jsXgSHUilM3hKSQBicbj9
      Z/CuXvlcxvI8j4vnT1NfGOTbK01e6Snx63kuCbZGa+gIRikUi1iWJQGIylOOg/Xugc93TKUY
      vnKRWLqfZ1aXee1UmdcLW3HneEsHNZ0nEkmUUmQyWQlAVJ47fBH3ykBFxh4duYJ97RR/3F7k
      N6ctflvaPGcEO6J11OsBUumMBCAqSymF03sE3M92gsu9TE9OUBzq4TutWV455fFWoQvvHmcR
      J3SDvYkkxVJJAhAV5jo4fT0Vf5lMepr0YDdPL0vz+jmD94rr7hqBpmnsjNUTQZOT4sX8ZCYm
      6P7Nb3j4qaeobW7mwkcfkRodpbGtjYtHjrC8s5PMxATrHn2U3OQkq7dtQ9M03CsDqPT8vvX9
      rIqFPO7AMZ5avZFXz7fgPPQlHkucR+f2M8GWBcJsidbIEkDMT8/+/TS1t3P64EEc2+b8Bx+Q
      n56mvqWFJatXU9/SwqXjxzn68ss4pjl73I/d89GiztM0y4xe6GFf3VX2XwjfdUmgaRpPJpol
      ADE/SikC4TCu44BS6LqObhg4ts3UyAitGzbw7X/8R4KRCB/96lf0vfceyizjXupf9Lk6js3Y
      wEn2xQc5OBDicH7NHSNYGYpKAGJ+uvbs4VJ3N+sefZTJoSFWrF+PUoqaxkZa169H0zSscpnO
      nTtZunYttc3NeNPXF23151ae5zJ6qY/tej+HhyIcK7Te9piApsmxQKJynO4PKf3shWpPg6al
      bZwOdvG19jQ7aq7d9DfZCBaVoRSxIYd4fDsOWWwvi2VnsZ17nwNQCZNjwzyUNDk8splgm8uW
      xPjs3yQAUTFqcBLMGgxqMLQVxIM6hE1sL42r5SlbKVyvhOvN/+SWhcpNT7DMPsr72hZUK2y9
      EYEEICrD8yD9iYvSKnBtDwii04xOM2FjNSpg4WlFPK2I5aUwrWlcz67IlIq5NEnvOB+pzWht
      S9iSmJAARIWkC2juvY/89FwFBNGow6COKEuJh3SUVsYhi+NlMJ0UnrJxPfNzmVapkCNmHeFj
      dyvBlU0SgKgMbSo394Nufxaeo4AwBs0YNBMxQGk2nlbAUVkclcX2cjgLuGr077i2RWSsm2Pa
      lyUAURna9blvUDcfM6cPBNGpJ0Q9IRSaruGFSzNBkMV2M7heGU/Nf9XJdWy0kV4JQFRGa7KG
      1i2rsWwHy3IolS1s28WyHUzTxrIcTGshB8hpKA80ogSJEqSFqK5QuolLEU8rYHtpLDeFN8cd
      ZZTyJABRGbVBgyXNN9+U4tarMysFtuNili3MG6GYpo3tuFiWQ9m0MU0bz1M4jovrejju7bdR
      QmloRAgQAZUkRCuJgIZLEUdlsFUW28vMrErdssdJAhAVYdxhA/jW25VqGoRDAcKhu78NlVIz
      Abg3AnA8HMfFtH6/FDFNG8t2sS0Hy7YplW1c10MnRogYIW0ZyvBQmo2r57G9DC45XPISgKiM
      oPPZzv39HU3TMAwNw/h0R+24rvf71S3bwTSdG0sVC8tysGwH23YkAFEZ+h1uRrGYDEMnaoSI
      RkI3/f7WSzRKAKIi7MDcV2moNKUUrmXjmDaWbVH2bIpWmYJrktPKeMGUBCDmduSllxg+fZo/
      +uu/JlZXx6v//M+EolGWf+lL9B0+zFf+9E/56Je/ZMfTT2MWi3Tu3Imrz/fGpgs3+2muFJ7j
      YhXLmPkipmlSVBZF5WAGFWZAUXbLWLqFUVukITJJayJNbcSUAMTctj75JFdOnqSczxNJJCik
      Uniuy/CZM3Tt2sXQqVOEIhHOvPMOq7ZswXNd3E+5zj4X5Xkzn+ZlC7tkYpdMSqUiJdfGVA5F
      w8WJB7DjAZyowrMsCraFHigQCWdINuRpr0mTCNy8a1QCEHMaPnuWlVu2MD44SDAcpn7ZMko3
      7ro4ffUqqx5+mA1793L4pz/lzKFDNCxfzvrop7u1kVIKlEIp8GwHq1DCyhWxiiWsYpmyZWIG
      wQyDHdax4wG8Gh0vYKDQcUolvGKOVMEjEi0Rq8uyviZNY7REzLj79wESgJhTIpkkPTrKys2b
      cWybNdu3E4rFaGxtZfDYMdo3bmRqZISv/dVfce7992lZs4bC9N3vzu65Hq5p3fg0L2MXy5jZ
      AlbJxPJsTOXiRI2ZT/N4EKfRwAvHZvabAp7joJfLWJkyGRQmRWINJeqXmnwlNklzeP5Hl8oJ
      MaIi6rNFdh/px7VsrHwJM1/ELpaxCyXMQmnmYrqawooZOIkATtTAiQdxQzrK0ODGNoRSCjyF
      Wy6h5fIUHIesoVGudWmqzdFRl2FZOE9twEFbwGaHLAFERWQiQQYPHsWxbdywgRvRcaIBnNoA
      ztIoTsTAi9x5T5HrunjZIkYuR0HTyLse2bhOqMUiGcuyLTZFR6y0oDf8rSQAMSelFBePHiU/
      Pc3mr38dTdPITU0xeeUK5UKBUjbLyi1buPDxx3Tu3IldLtPU1sb4xiSe7uAFb3yq3+Edq5RC
      eR5OqYxKZ1CmSVHXmUpEyTUYNNfl6IhOszuWpS5oY3zOO5ckADEn2zQ5d/gwgVCIVQ8/TCKZ
      5MOf/xzPdenctYveN9/ELBYZ7e9naniYfd/7HgDFlUsIXp+4bTzXdfGKJZhOgWVR8DzSNQlS
      NWFo01gRmmJbdIiHEgUCemW/UJMAxNyUQjcMjGAQx7IYOXuW4dOnMYJBdj77LI2trbR2ddHY
      2sqJ/ft57V//lW/8zd8QaUgSmBif/YQ3cjm86RSeglRdDWN1CfJRRTKaYXXkKnsTGZIhm2CF
      3/SfJAGIOQXDYRpbW8lOTuKYJkvXruWZf/onzr3/Pr1vvIHnujR3dDDY3c3WJ5/kck8PeiCA
      U1NH6Fw/lutRCge53phk5KGVhIM52kKTbItcoasmTyzw+Rw3tBCyF0hUjFcoMHjwACk7R60+
      TVd8knXxLC1hi7BRvTf9J8kSQMzbpRMniNfV0bxqFcVMhoEjR1i7YweRRILrV64QCIcpZTLU
      L11KMBolEo+zecUEG91e6oKVuzr0ZyEBiHnJT09z6q230HSdb/7d3zE1PEwkkeDIyy/T2NbG
      6YMHWdHZSXpigvqWFh79kz8BoG7lJuqGjld59ncnl0YU82KVStQ2N+NYFp7r0trVRXpsjI5N
      mzj60ksU0mk6d+2isbWVyStX+Pg//xOAifqtuNr9+zkrAYh5qW1uZmpkhNrmZq5fvjxzhOiZ
      M3iOw9M/+AFtGzbQ2NaGEQiwbN068lNTADh6lMnajVWe/d3JRrCouKWpI2y6/EO0O1ynv9pk
      CSAqbrJmA6VQU7WncUcSgKg4JxBnuGl3tadxRxKAWBRXG3diGfFqT+M2EoBYFLaRYOQ+XApI
      AGJxaBrDTY9RDtZXeyY3kQDEoimHklxp3lftadxEAhCLaqj5CTLRjmpPY5YEIBaVpwcZWPY0
      3n3y7bAEIBbdZO1GriUfrfY0AAlAVIOm0b/8OxTCLdWeiQQgqsM24pzs+F7VvxuQAER1aBrZ
      +EouLvtWVachAYiqGmp6jOHG3VU7TE4CENWlGZxr/a+MNjxSlZeXAETVeXqYs21/xnT8oUV/
      bQlA3BdcI8rJVf+NdGzVor6uBCDuG2awnu41f8tUonPRtgkkAHFfsQM19Kz674zV71iUCCQA
      cd9xAnFOd/wFw017UVT2TjMSgLgveXqQc63PcKb9z7GNWMVeRwIQ9y2lGVxt3MWRh/6BVHxt
      RV5DAhD3vXy0je7Vf8tQ097P/RpDEoB4IDiBGH1t3+XY2v9JKr72c9tAlgDEAyWdWMuxNd/n
      bNt3KQfrP3MI98dZCUJ8Cp4RZqRpL+P122m7foi2qXeJ2KkFjSVXhhMPNqUIugWWT31A2+Tb
      RK1JdOZ/6XUJQHxhaMqlIXeeZemjNGd6CDu5eTxHAhBfNEoRcnIk8+dozvTSUBggZGcxlH3b
      Q2UbQHzxaBpWsJaxhkcYa3gETTkkSqPUFS/SkB8gal0nYqWI2CkJQDwYBo8f52pfHxsee4ye
      AwdYs2MHHZs2cbmnh8u9vex85hnK+TxX+/qwLYtIPI4RDNKxaRO6ESAXayMXa2OkcQ+acjGU
      TcAtSgDiwRBJJLjW38/KrVvZ9q1vcejFF+nYtIlwLMb4wACZiQl6DhyglMuhGwblfJ7l69ax
      auvWmwfSNJQWwCGAY0Qxnn/++edTwCigpdOo+vvr0nVCAOiBAHa5jGvbXDt/nq3f/Cax2lp0
      Y+Zu8+fef5+JwUGyExM89f3vk5+cZOj0aaZGRli5efNdx5UlgHggDBw9ytTwMCvWr2f84kUS
      ySRmocDUyAijFy6w69lnCScSnDl0iEgiQd3SpQTCYaI1NfccV/YCCV+TQyGEr0kAwtckAOFr
      EoDwNQlA+JoEIHxNAhC+JgEIX5MAhK9JAMLXJADhaxKA8DUJQPiaBCB8TQIQviYBCF+TAISv
      SQDC1yQA4WsSgPA1CUD4mgQgfE0CEL4mAQhfkwCEr0kAwtckAOFrEoDwNQlA+JoEIHxNAhC+
      JgEIX5MAhK9JAMLXJADhaxKA8DUJQPiaBCB8TQIQviYBCF+TAISvSQDC1/4/LWUIgqJ2LdkA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='% of vacctioation done in each state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covaxin vs Covishield ' width='169'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid-19 Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death vs Year-wise' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Male &amp; Female doses vs State' width='192'>
      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
      ogD4tgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Month-wise ac death &amp; confirmed' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Person Year-wise vaccination' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State-wise cured confirmed &amp; deaths' width='192'>
      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
      iMHJxQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total doses vs State' width='192'>
      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
      RgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='state-wise active cases' width='192'>
      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
      IdlinCLRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 state with ac' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 10 state with total doses' width='192'>
      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
      HDMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
